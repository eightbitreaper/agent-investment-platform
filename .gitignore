# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Agent Investment Platform Specific
# ==================================

# Generated reports (keep structure, ignore content)
reports/*.md
reports/*.json
!reports/.gitkeep

# Runtime logs
logs/*.log
logs/*.txt
logs/*.json
!logs/.gitkeep

# Logging system files
src/logging/dashboard/*.log
src/logging/*.log
*.log.*
*.log.gz

# ELK Stack data
elasticsearch_data/
logstash_data/
kibana_data/

# Local model files (too large for git)
models/
*.bin
*.gguf
*.safetensors

# Local configuration (contains secrets)
.env
config/local-*.json
config/local-*.yaml

# Generated model configurations (runtime data)
config/huggingface-models.json

# Docker volumes and data
docker-data/
data/

# IDE specific
.vscode/settings.json.local
.idea/
*.swp
*.swo
*~

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.backup
*.bak
*~
validation-report.md

# Session files
.memory/session-log.json
.memory/project-context-backup.md

# Docker and infrastructure
docker-compose.override.yml
.env.local
.env.production
.docker/

# Database files
*.db
*.sqlite
*.sqlite3
postgres_data/
redis_data/
ollama_data/

# Additional data directories
test_data/
backup/
logs/health-check-report.json

# Docker monitoring reports (runtime generated)
docker_health_report_*.json
container_monitoring_*.json
monitoring_*.log
health_reports/

# Security: API Keys and Sensitive Data
# ====================================
# Prevent accidental commits of API keys in any file
*api_key*
*API_KEY*
*secret*
*SECRET*
*token*
*TOKEN*
*password*
*PASSWORD*
*.pem
*.key
*.crt
*.p12
*.pfx

# Backup files that might contain secrets
*.bak
*.backup
*.orig
*.save

# Test files that might contain real API keys
test_*_api.py
*_test_direct.py
*_api_test.py
